boolean:
    0: "False"
    1: "True"
    "": "False"
    "false": "False"
    "true": "True"

error403:
    title: "Forbidden"
    note: "Sorry, you are not allowed to access this content."
error404:
    title: "Not Found"
    note: "This content does not exist."
error405:
    title: "Method Not Allowed"
    note: "Sorry, you are not allowed to access this content."
error500:
    title: "Internal Server Error"
    note: "Sorry, we have an error on this content. \n It is recorded and we will check the problem as soon as possible."
error503:
    title: "Service Unavailable"
    note: "We are currently in maintenance for few minutes. \n Thanks much for your understanding."

"-": "-"
action: "Action"
add: "Add"
addresses: "Addresses"
alias: "Alias"
aliases: "Aliases"
all: "All"
allocate_explanation: "Allocate explanation"
allocation_explain: "Allocation explain"
ALLOCATION_FAILED: "Allocation failed"
app_logs: "Logs"
app_roles: "Roles"
app_uninstall: "Uninstall"
app_uninstall_note: "After confirmation, the indices below will be deleted. You will be able to install again using the secret key."
app_upgrade: "Upgrade"
app_upgrade_note: "All indices are upgraded."
app_users: "Users"
application: "Application"
applications: "Applications"
apply: "Apply"
array: "Array"
available: "Available"
aws_account: "AWS account"
base_path: "Base path"
body: "Body (JSON)"
bucket: "Bucket"
buffer_size: "Buffer size"
cache_clear: "Clear cache"
cancel: "Cancel"
cancellable: "Cancellable"
canned_acl: "Canned ACL"
cat: "Cat (APIs)"
change_password: "Change password"
chunk_size: "Chunk size"
classname: "Class name"
cleanup: "Cleanup"
client: "Client"
close: "Close"
cluster: "Cluster"
CLUSTER_RECOVERED: "Cluster recovered"
cluster_settings: "Cluster settings"
cold: "Cold"
component_template_system: "System component template"
component_templates: "Component templates"
command: "Command"
composed_of: "Composed of"
compress: "Compress"
configuration: "Configuration"
confirm: "Confirm"
connected: "Connected"
connections: "Connections"
copy: "Copy"
console: "Console"
coordinator_stats: "Coordinator stats"
cpu_usage: "CPU usage"
create_component_template: "Create component template"
create_enrich_policy: "Create enrich policy"
create_index: "Create index"
create_index_template: "Create index template"
create_ilm_policy: "Create ILM policy"
create_pipeline: "Create pipeline"
create_slm_policy: "Create SLM policy"
create_repository_fs: "Create Shared file system repository"
create_repository_s3: "Create AWS S3 repository"
create_repository_gcs: "Create Google Cloud Storage repository"
create_role: "Create role"
create_snapshot: "Create snapshot"
create_user: "Create user"
created_at: "Created at"
creation_date: "Creation date"
DANGLING_INDEX_IMPORTED: "Dangling index imported"
data: "Data"
date: "Date"
deciders: "Deciders"
delete: "Delete"
delete_date: "Delete date"
deprecations: "Deprecations"
description: "Description"
destination: "Destination"
details: "Details"
disable: "Disable"
disabled: "Disabled"
disk_usage: "Disk usage"
docker_hub: "Docker Hub"
documentation: "Documentation"
documents: "Documents"
documents_deleted: "Documents deleted"
duration_in_millis: "Duration in millis"
edit_as_persistent: "Edit as persistent"
edit_as_transient: "Edit as transient"
elasticsearch_roles: "Roles"
elasticsearch_users: "Users"
email: "Email"
email_already_used: "Email already used"
empty: "Empty"
enable: "Enable"
enabled: "Enabled"
end_time: "End time"
enrich: "Enrich policies"
enrich_fields: "Enrich fields"
ES_VERSION_TRACKING: "Elasticsearch version tracking"
execute: "Execute"
executed_searches_total: "Executed searches total"
executing_policies: "Executing policies"
EXISTING_INDEX_RESTORED: "Existing index restored"
expire_after: "Expire after"
expiry_date: "Expiry date"
export: "Export"
FAILED: "Failed"
failures: "Failures"
feature: "Feature"
features_by_version: "Features related to Elasticsearch version"
features_xpack: "X-Pack features"
fetch_size: "Fetch size"
field: "Field"
filter: "Filter"
flush: "Flush"
force_merge: "Force merge"
freeze: "Freeze"
frozen: "Frozen"
full_name: "Full name"
github: "GitHub"
green: "Green"
headers: "Headers"
health: "Health"
heap_usage: "Heap usage"
help: "Help"
help_form:
    pipeline:
        name: "A unique identifier for this pipeline."
        description: "A description of what this pipeline does."
        processors: "The processors to use to transform the documents before indexing."
        on_failure: "The alternate processors to execute after a processor."
    enrich_policy:
        name: "Enrich policy name used to limit the request."
        type: "The enrich policy type determines how enrich data is matched to incoming documents."
        indices: "Source indices used to create the enrich index."
        match_field: "Field in the source indices used to match incoming documents."
        enrich_fields: "Fields to add to matching incoming documents."
        query: "Query type used to filter documents in the enrich index for matching."
    app_role:
        name: "The name of the role. Only uppercase letters and underscore."
    role:
        name: "The name of the role."
        applications: "A list of application privilege entries."
        cluster: "A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute."
        run_as: "A list of users that the owners of this role can impersonate."
        indices: "A list of indices permissions entries."
        metadata: "Optional meta-data."
    snapshot:
        name: "A unique identifier for this snapshot."
        repository: "The repository where you want to store this snapshot."
        indices: "Indices to back up."
        ignore_unavailable: "Ignores indices that are unavailable when taking the snapshot. Otherwise, the entire snapshot will fail."
        partial: "Allows snapshot of indices with primary shards that are unavailable. Otherwise, the entire snapshot will fail."
        include_global_state: "Stores the global state of the cluster as part of the snapshot."
    ilm_policy:
        name: "A unique identifier for this policy."
        hot: "The index is actively being written to."
        warm: "The index is generally not being written to, but is still queried."
        cold: "The index is no longer being updated and is seldom queried. The information still needs to be searchable, but itâ€™s okay if those queries are slower."
        delete: "The index is no longer needed and can safely be deleted."
    slm_policy:
        name: "A unique identifier for this policy."
        snapshot_name: "The name for the snapshots. A unique identifier is automatically added to each name. Supports <a target=\"_blank\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/date-math-index-names.html#date-math-index-names\">date math expressions</a>."
        repository: "The repository where you want to store the snapshots."
        indices: "Indices to back up."
        schedule: "The frequency at which to take the snapshots. Use <a target=\"_blank\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/trigger-schedule.html#schedule-cron\">cron expression</a>."
        expire_after: "The time to wait before deleting snapshots."
        min_count: "The minimum number of snapshots to store in your cluster."
        max_count: "The maximum number of snapshots to store in your cluster."
        ignore_unavailable: "Ignores indices that are unavailable when taking the snapshot. Otherwise, the entire snapshot will fail."
        partial: "Allows snapshots of indices with primary shards that are unavailable. Otherwise, the entire snapshot will fail."
        include_global_state: "Stores the global state of the cluster as part of the snapshot."
    index_template:
        name: "A unique identifier for this template."
        index_patterns: "The index patterns to apply to the template (separated by commas)."
        template: "The index pattern to apply to the template."
        order: "The merge order when multiple templates match an index."
        version: "A number that identifies the template to external management systems."
        settings: "Define the behavior of your indices."
        mappings: "Define how to store and index documents."
        aliases: "Set up aliases to associate with your indices."
        priority: "Priority to determine index template precedence when a new index is created."
        composed_of: "An ordered list of component template names."
    component_template:
        name: "A unique identifier for this template."
        version: "A number that identifies the template to external management systems."
        settings: "Define the behavior of your indices."
        mappings: "Define how to store and index documents."
        aliases: "Set up aliases to associate with your indices."
    repository:
        name: "A unique name for the repository."
        chunk_size: "Breaks files into smaller units when taking snapshots. Examples: 1g, 10mb, 5k, 1024B."
        max_snapshot_bytes_per_sec: "The rate for creating snapshots for each node. Examples: 1g, 10mb, 5k, 1024B."
        max_restore_bytes_per_sec: "The snapshot restore rate for each node. Examples: 1g, 10mb, 5k, 1024B."
        compress: "Compresses the index mapping and setting files for snapshots. Data files are not compressed."
        readonly: "Only one cluster should have write access to this repository. All other clusters should be read-only."
        verify: "Verifies the repository on submission."
        fs:
            location: "The location must be registered in the path.repo setting on all master and data nodes."
        s3:
            bucket: "The name of the AWS S3 bucket to use for snapshots."
            client: "The name of the AWS S3 client."
            base_path: "The bucket path to the repository data."
            server_side_encryption: "Encrypts files on the server using AES256 algorithm."
            buffer_size: "Beyond this minimum threshold, the S3 repository will use the AWS Multipart Upload API to split the chunk into several parts and upload each in its own request. Examples: 1g, 10mb, 5k, 1024B."
            canned_acl: "The canned ACL to add to new S3 buckets and objects."
            storage_class: "The storage class for new objects in the S3 repository."
        gcs:
            bucket: "The name of the Google Cloud Storage bucket to use for snapshots."
            client: "The name of the Google Cloud Storage client."
            base_path: "The bucket path to the repository data."
    index_search:
        query: "Use <a target=\"_blank\" href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax\">Query string syntax</a>."

help_modal:
    license:
        start_basic: "If you have already activated a trial, you cannot start a new trial until the next major version."

history: "History"
host: "Host"
hot: "Hot"
id: "ID"
ilm_policy: "ILM policy"
ilm_short: "ILM policies"
ilm: "Index lifecycle management policies"
ignore_unavailable: "Ignore unavailable"
import: "Import"
import_from_file: "Import from file"
import_from_database: "Import from database"
import_file: "File (ODS, XLSX)"
import_note_id: "The document ID. If no ID is specified, a document ID is automatically generated."
import_note_type: "The document type. Optional, used by old ES version."
import_note_json: "JSON"
import_note_keyword: "Use carriage return to have multiple keywords"
import_note_geo_point: "Use latitude,longitude format"
include_global_state: "Include global state"
INCOMPATIBLE: "Incompatible"
index: "Index"
index_graveyard: "Index graveyard"
INDEX_CREATED: "Index created"
index_patterns: "Index patterns"
INDEX_REOPENED: "Index reopened"
index_settings: "Index settings"
index_system: "System index"
index_template_system: "System index template"
index_template: "Index template"
index_template_legacy: "Index template (legacy)"
index_templates: "Index templates"
index_templates_legacy: "Index templates (legacy)"
indices: "Indices"
IN_PROGRESS: "In progress"
INITIALIZING: "Initializing"
ip: "IP"
issue_date: "Issue date"
last_success: "Last success"
last_failure: "Last failure"
level: "Level"
license: "License"
lifecycle: "Lifecycle"
list: "List"
load_average: "Load average"
location: "Location"
login: "Login"
logout: "Logout"
long_text: "More than 500 characters"
lower_bound_of_the_total: "The number of returned documents is a lower bound."
managed: "Managed"
map: "Map"
mappings: "Mappings"
master: "Master"
master_node: "Master node"
master_eligible: "Master eligible"
match_field: "Match field"
max_count: "Maximum count"
max_restore_bytes_per_sec: "Max restore bytes per second"
max_snapshot_bytes_per_sec: "Max snapshot bytes per second"
memory_usage: "Memory usage"
message: "Message"
metadata: "Metadata"
method: "Method"
min_count: "Mininum count"
ml_settings: "Machine Learning settings"
mode: "Mode"
modified_date: "Modified date"
more: "More"
NEW_INDEX_RESTORED: "New index restored"
next_execution: "Next execution"
node: "Node"
node_allocation_decisions: "Node allocation decisions"
node_decision: "Node decision"
NODE_LEFT: "Node left"
node_settings: "Node settings"
nodes: "Nodes"
not_allowed: "Not allowed"
name: "Name"
name_already_used: "Name already used"
names: "Names"
next: "Next"
on_failure: "On failure"
open: "Open"
operation_mode: "Operation mode"
order: "Order"
os: "OS"
os_version: "OS version"
os_arch: "OS architecture"
partial: "Partial"
PARTIAL: "Partial"
password: "Password"
password_confirm: "Confirm password"
path: "Path"
pipelines: "Pipelines"
plugins: "Plugins"
previous: "Previous"
primary: "Primary"
primary_size: "Primary size"
priority: "Priority"
privileges: "Privileges"
process: "Process"
processor: "Processor"
processors: "Processors"
query: "Query"
queue_size: "Queue size"
readonly: "Read-only"
REALLOCATED_REPLICA: "Reallocated replica"
reason: "Reason"
red: "Red"
refresh: "Refresh"
register: "Register"
reindex: "Reindex"
REINITIALIZED: "Reinitialized"
reload_secure_settings: "Reload secure settings"
RELOCATING: "Relocating"
remote_clusters: "Remote clusters"
remote_requests_current: "Remote requests current"
remote_requests_total: "Remote requests total"
remove: "Remove"
remove_policy: "Remove policy"
rename_pattern: "Rename pattern"
rename_replacement: "Rename replacement"
REPLICA_ADDED: "Replica added"
replicas: "Replicas"
repository: "Repository"
repository_fs: "Shared file system repository"
repository_s3: "AWS S3 repository"
repository_gcs: "Google Cloud Storage repository"
repositories: "Repositories"
required: "Required"
REROUTE_CANCELLED: "Reroute cancelled"
reserved: "Reserved"
response: "Response"
response_code: "Code"
resources: "Resources"
restore: "Restore"
results: "Results"
retention_runs: "Retention runs"
retention_failed: "Retention failed"
retention_timed_out: "Retention timed out"
retention_deletion_time: "Retention deletion time"
role: "Role"
roles: "Roles"
rollover_alias: "Alias for rollover index"
run_as: "Run as"
running_time_in_nanos: "Running time in nanos"
save: "Save"
schedule: "Schedule"
score: "Score"
screenshots: "Screenshots"
search: "Search"
secret_register: "Secret key"
secret_register_wrong: "Wrong secret key"
secure_settings_password: "Secure settings password"
server_side_encryption: "Server-side encryption"
setting: "Setting"
settings: "Settings"
settings_defaults: "Defaults"
settings_persistent: "Persistent"
settings_transient: "Transient"
shard: "Shard"
shards: "Shards"
size: "Size"
slm_policy: "SLM policy"
slm_short: "SLM policies"
slm: "Snapshot lifecycle management policies"
sort: "Sort"
source: "Source"
snapshot: "Snapshot"
snapshots_taken: "Successes"
snapshots_failed: "Failures"
snapshots_deleted: "Deleted"
snapshot_deletion_failures: "Deletion failures"
snapshot_name: "Snapshot name"
snapshots: "Snapshots"
sql: "SQL access"
start: "Start"
start_basic: "Revert to basic"
start_time: "Start time"
start_trial: "Start a 30-day trial"
STARTED: "Started"
state: "State"
stats: "Stats"
stats_data:
    indices_total: "Total indices"
    indices_total_documents: "Total documents"
    indices_total_size: "Total size"
    indices_by_status: "Indices by status"
    indices_by_health: "Indices by health"
    indices_by_frozen: "Indices by frozen status"
    indices_by_documents: "Indices by documents"
    indices_by_total_size: "Indices by total size"
status: "Status"
stop: "Stop"
storage_class: "Storage class"
submit: "Submit"
summary: "Summary"
SUCCESS: "Success"
tasks: "Tasks"
template: "Template"
toggle_navigation: "Toggle navigation"
tools: "Tools"
total: "Total"
total_size: "Total size"
total_snapshots_taken: "Total snapshots taken"
total_snapshots_failed: "Total snapshots failed"
total_snapshots_deleted: "Total snapshots deleted"
total_snapshot_deletion_failures: "Total snapshot deletion failures"
translation_to_dsl: "Translation to DSL"
type: "Type"
UNASSIGNED: "Unassigned"
unassigned_reason: "Unassigned reason"
unassigned_shards: "Unassigned shards"
unfreeze: "Unfreeze"
update: "Update"
uptime: "Uptime"
url: "URL"
usage: "Usage"
used: "Used"
users: "Users"
uuid: "UUID"
value: "Value"
verify: "Verify"
version: "Version"
version_es: "ES version"
version_jvm: "JVM version"
version_created: "Version (created)"
version_upgraded: "Version (upgraded)"
voting_only: "Voting only"
warm: "Warm"
watermark_flood_stage: "Flood stage"
watermark_high: "High"
watermark_low: "Low"
yellow: "Yellow"
